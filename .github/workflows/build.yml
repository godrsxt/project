name: Build and Troubleshoot

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # Change to your preferred runner if necessary

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up build tools (install ccache, gcc, etc.)
    - name: Set up build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential ccache

    # Step 3: Verify ccache and gcc installation
    - name: Verify ccache and gcc versions
      run: |
        ccache --version
        gcc --version
        clang --version || true  # Optional: if you're using clang

    # Step 4: Clear any existing ccache to avoid corruption
    - name: Clear ccache cache
      run: ccache -C

    # Step 5: Check disk space (optional, to ensure there are no space issues)
    - name: Check disk space
      run: df -h

    # Step 6: Set environment variables (optional, if needed)
    - name: Set environment variables
      run: |
        echo "CC=/usr/bin/gcc" >> $GITHUB_ENV
        echo "CXX=/usr/bin/g++" >> $GITHUB_ENV

    # Step 7: Reinstall ccache and build tools if needed
    - name: Reinstall ccache and gcc (if needed)
      run: |
        sudo apt-get install --reinstall -y ccache gcc

    # Step 8: Build the project (replace with your actual build commands)
    - name: Build project
      run: |
        # Replace with your actual build command (e.g., make, cmake, etc.)
        make

    # Step 9: Show ccache statistics for debugging
    - name: Show ccache stats
      run: |
        ccache -s

    # Optional: Archive build logs for debugging
    - name: Upload build logs as artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-logs
        path: ./build_logs  # Adjust path based on where your build logs are saved
